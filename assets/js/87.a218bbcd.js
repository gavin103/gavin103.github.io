(window.webpackJsonp=window.webpackJsonp||[]).push([[87],{567:function(t,s,a){"use strict";a.r(s);var n=a(4),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组"}},[t._v("#")]),t._v(" 数组")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("For-each循环")])])]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("type element"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("element"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("ul",[a("li",[a("strong",[t._v("多维数组")])])]),t._v(" "),a("p",[t._v("多维数组可以看成是数组的数组，比如二维数组就是一个特殊的一维数组，其每一个元素都是一个一维数组")]),t._v(" "),a("ul",[a("li",[t._v("Array类")])]),t._v(" "),a("p",[t._v("java.util.Arrays 类能方便地操作数组，它提供的所有方法都是静态的。\n具有以下功能：")]),t._v(" "),a("ul",[a("li",[t._v("给数组赋值：通过 fill 方法。")]),t._v(" "),a("li",[t._v("对数组排序：通过 sort 方法,按升序。")]),t._v(" "),a("li",[t._v("比较数组：通过 equals 方法比较数组中元素值是否相等。")]),t._v(" "),a("li",[t._v("查找数组元素：通过 binarySearch 方法能对排序好的数组进行二分查找法操作。")])]),t._v(" "),a("table",{staticClass:"reference"},[a("tbody",[a("tr",[a("th",{staticStyle:{width:"76px"}},[t._v("\n\t\t\t\t序号")]),t._v(" "),a("th",{staticStyle:{width:"501px"}},[t._v("\n\t\t\t\t方法和说明")])]),t._v(" "),a("tr",[a("td",{staticStyle:{width:"76px"}},[t._v("\n\t\t\t\t1")]),t._v(" "),a("td",{staticStyle:{width:"501px"}},[a("strong",[t._v("public static int binarySearch(Object[] a, Object key)")]),a("br"),t._v("\n\t\t\t\t用二分查找算法在给定数组中搜索给定值的对象(Byte,Int,double等)。数组在调用前必须排序好的。如果查找值包含在数组中，则返回搜索键的索引；否则返回 (-("),a("em",[t._v("插入点")]),t._v(") - 1)。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{width:"76px"}},[t._v("\n\t\t\t\t2")]),t._v(" "),a("td",{staticStyle:{width:"501px"}},[a("strong",[t._v("public static boolean equals(long[] a, long[] a2)")]),a("br"),t._v("\n\t\t\t\t如果两个指定的 long 型数组彼此"),a("em",[t._v("相等")]),t._v("，则返回 true。如果两个数组包含相同数量的元素，并且两个数组中的所有相应元素对都是相等的，则认为这两个数组是相等的。换句话说，如果两个数组以相同顺序包含相同的元素，则两个数组是相等的。同样的方法适用于所有的其他基本数据类型（Byte，short，Int等）。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{width:"76px"}},[t._v("\n\t\t\t\t3")]),t._v(" "),a("td",{staticStyle:{width:"501px"}},[a("strong",[t._v("public static void fill(int[] a, int val)")]),a("br"),t._v("\n\t\t\t\t将指定的 int 值分配给指定 int 型数组指定范围中的每个元素。同样的方法适用于所有的其他基本数据类型（Byte，short，Int等）。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{width:"76px"}},[t._v("\n\t\t\t\t4")]),t._v(" "),a("td",{staticStyle:{width:"501px"}},[a("strong",[t._v("public static void sort(Object[] a)")]),a("br"),t._v("\n\t\t\t\t对指定对象数组根据其元素的自然顺序进行升序排列。同样的方法适用于所有的其他基本数据类型（Byte，short，Int等）。")])])])]),t._v(" "),a("h2",{attrs:{id:"date类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#date类"}},[t._v("#")]),t._v(" Date类")]),t._v(" "),a("table",{staticClass:"reference"},[a("tbody",[a("tr",[a("th",{staticStyle:{width:"38px"}},[t._v("\n\t\t\t\t序号")]),t._v(" "),a("th",{staticStyle:{width:"538px"}},[t._v("\n\t\t\t\t方法和描述")])]),t._v(" "),a("tr",[a("td",{staticStyle:{width:"38px"}},[t._v("\n\t\t\t\t1")]),t._v(" "),a("td",{staticStyle:{width:"538px"}},[a("strong",[t._v("boolean after(Date date)")]),a("br"),t._v("\n\t\t\t\t若当调用此方法的Date对象在指定日期之后返回true,否则返回false。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{width:"38px"}},[t._v("\n\t\t\t\t2")]),t._v(" "),a("td",{staticStyle:{width:"538px"}},[a("strong",[t._v("boolean before(Date date)")]),a("br"),t._v("\n\t\t\t\t若当调用此方法的Date对象在指定日期之前返回true,否则返回false。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{width:"38px"}},[t._v("\n\t\t\t\t3")]),t._v(" "),a("td",{staticStyle:{width:"538px"}},[a("strong",[t._v("Object clone( )")]),a("br"),t._v("\n\t\t\t\t返回此对象的副本。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{width:"38px"}},[t._v("\n\t\t\t\t4")]),t._v(" "),a("td",{staticStyle:{width:"538px"}},[a("strong",[t._v("int compareTo(Date date)")]),a("br"),t._v("\n\t\t\t\t比较当调用此方法的Date对象和指定日期。两者相等时候返回0。调用对象在指定日期之前则返回负数。调用对象在指定日期之后则返回正数。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{width:"38px"}},[t._v("\n\t\t\t\t5")]),t._v(" "),a("td",{staticStyle:{width:"538px"}},[a("strong",[t._v("int compareTo(Object obj)")]),a("br"),t._v("\n\t\t\t\t若obj是Date类型则操作等同于compareTo(Date) 。否则它抛出ClassCastException。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{width:"38px"}},[t._v("\n\t\t\t\t6")]),t._v(" "),a("td",{staticStyle:{width:"538px"}},[a("strong",[t._v("boolean equals(Object date)")]),a("br"),t._v("\n\t\t\t\t当调用此方法的Date对象和指定日期相等时候返回true,否则返回false。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{width:"38px"}},[t._v("\n\t\t\t\t7")]),t._v(" "),a("td",{staticStyle:{width:"538px"}},[a("strong",[t._v("long getTime( )")]),a("br"),t._v("\n\t\t\t\t返回自 1970 年 1 月 1 日 00:00:00 GMT 以来此 Date 对象表示的毫秒数。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{width:"38px"}},[t._v("\n\t\t\t\t8")]),t._v(" "),a("td",{staticStyle:{width:"538px"}},[a("strong",[t._v("int hashCode( )")]),a("br"),t._v("\n\t\t\t\t 返回此对象的哈希码值。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{width:"38px"}},[t._v("\n\t\t\t\t9")]),t._v(" "),a("td",{staticStyle:{width:"538px"}},[a("strong",[t._v("void setTime(long time)")]),a("br"),t._v("\n\t\t\t\t "),a("br"),t._v("\n\t\t\t\t用自1970年1月1日00:00:00 GMT以后time毫秒数设置时间和日期。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{width:"38px"}},[t._v("\n\t\t\t\t10")]),t._v(" "),a("td",{staticStyle:{width:"538px"}},[a("strong",[t._v("String toString( )")]),a("br"),t._v("\n\t\t\t\t 把此 Date 对象转换为以下形式的 String： dow mon dd hh:mm:ss zzz yyyy 其中： dow 是一周中的某一天 (Sun, Mon, Tue, Wed, Thu, Fri, Sat)。")])])])]),t._v(" "),a("p",[t._v("SimpleDateFormat 是一个以语言环境敏感的方式来格式化和分析日期的类。SimpleDateFormat 允许你选择任何用户自定义日期时间格式来运行。例如：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('SimpleDateFormat ft = new SimpleDateFormat ("yyyy-MM-dd hh:mm:ss");\n')])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[a("strong",[t._v("格式化")])]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DateDemo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n \n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 初始化 Date 对象")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),t._v(" date "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//c的使用  ")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"全部日期和时间信息：%tc%n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("date"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("          \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//f的使用  ")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"年-月-日格式：%tF%n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("date"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//d的使用  ")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"月/日/年格式：%tD%n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("date"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//r的使用  ")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"HH:MM:SS PM格式（12时制）：%tr%n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("date"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//t的使用  ")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"HH:MM:SS格式（24时制）：%tT%n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("date"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//R的使用  ")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"HH:MM格式（24时制）：%tR"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("date"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 全部日期和时间信息：星期一 九月 10 10:43:36 CST 2012  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 年-月-日格式：2012-09-10  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 月/日/年格式：09/10/12  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// HH:MM:SS PM格式（12时制）：10:43:36 上午  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// HH:MM:SS格式（24时制）：10:43:36  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// HH:MM格式（24时制）：10:43  ")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br")])]),a("h2",{attrs:{id:"休眠-sleep"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#休眠-sleep"}},[t._v("#")]),t._v(" 休眠(sleep)")]),t._v(" "),a("p",[t._v("sleep()使当前线程进入停滞状态（阻塞当前线程），让出CPU的使用、目的是不让当前线程独自霸占该进程所获的CPU资源，以留一定时间给其他线程执行的机会。")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('import java.util.*;\n  \npublic class SleepDemo {\n   public static void main(String args[]) {\n      try { \n         System.out.println(new Date( ) + "\\n"); \n         Thread.sleep(1000*3);   // 休眠3秒\n         System.out.println(new Date( ) + "\\n"); \n      } catch (Exception e) { \n          System.out.println("Got an exception!"); \n      }\n   }\n}\n')])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br")])]),a("h2",{attrs:{id:"calendar类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#calendar类"}},[t._v("#")]),t._v(" Calendar类")]),t._v(" "),a("p",[t._v("Calendar类的功能要比Date类强大很多，而且在实现方式上也比Date类要复杂一些。")]),t._v(" "),a("p",[t._v("Calendar类是一个抽象类，在实际使用时实现特定的子类的对象，创建对象的过程对程序员来说是透明的，只需要使用getInstance方法创建即可。")]),t._v(" "),a("p",[t._v("Calendar类中用以下这些常量表示不同的意义，jdk内的很多类其实都是采用的这种思想")]),t._v(" "),a("table",{staticClass:"reference"},[a("tbody",[a("tr",[a("th",[t._v("常量")]),a("th",[t._v("描述")])]),t._v(" "),a("tr",[a("td",[t._v("Calendar.YEAR")]),a("td",[t._v("年份")])]),t._v(" "),a("tr",[a("td",[t._v("Calendar.MONTH")]),a("td",[t._v("月份")])]),t._v(" "),a("tr",[a("td",[t._v("Calendar.DATE")]),a("td",[t._v("日期")])]),t._v(" "),a("tr",[a("td",[t._v("Calendar.DAY_OF_MONTH")]),a("td",[t._v("日期，和上面的字段意义完全相同")])]),t._v(" "),a("tr",[a("td",[t._v("Calendar.HOUR")]),a("td",[t._v("12小时制的小时")])]),t._v(" "),a("tr",[a("td",[t._v("Calendar.HOUR_OF_DAY")]),a("td",[t._v("24小时制的小时")])]),t._v(" "),a("tr",[a("td",[t._v("Calendar.MINUTE")]),a("td",[t._v("分钟")])]),t._v(" "),a("tr",[a("td",[t._v("Calendar.SECOND")]),a("td",[t._v("秒")])]),t._v(" "),a("tr",[a("td",[t._v("Calendar.DAY_OF_WEEK")]),a("td",[t._v("星期几")])])])]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//创建一个代表2009年6月12日的Calendar对象")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Calendar")]),t._v(" c1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Calendar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getInstance")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nc1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2009")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nc1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Calendar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DATE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nc1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Calendar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("YEAR"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2008")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nc1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Calendar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DATE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//把c1对象的日期加上10，也就是c1也就表示为10天后的日期，其它所有的数值会被重新计算")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获得年份")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" year "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" c1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Calendar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("YEAR"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获得月份")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" month "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" c1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Calendar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MONTH"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获得日期")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" date "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" c1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Calendar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DATE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获得小时")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" hour "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" c1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Calendar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("HOUR_OF_DAY"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获得分钟")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" minute "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" c1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Calendar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MINUTE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获得秒")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" second "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" c1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Calendar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SECOND"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获得星期几（注意（这个与Date类是不同的）：1代表星期日、2代表星期1、3代表星期二，以此类推）")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" day "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" c1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Calendar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DAY_OF_WEEK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br")])]),a("h2",{attrs:{id:"gregoriancalendar类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gregoriancalendar类"}},[t._v("#")]),t._v(" GregorianCalendar类")]),t._v(" "),a("p",[t._v("Calendar类实现了公历日历，GregorianCalendar是Calendar类的一个具体实现。")]),t._v(" "),a("p",[t._v("Calendar 的getInstance（）方法返回一个默认用当前的语言环境和时区初始化的GregorianCalendar对象。GregorianCalendar定义了两个字段：AD和BC。这是代表公历定义的两个时代。")]),t._v(" "),a("p",[t._v("下面列出GregorianCalendar对象的几个构造方法：")]),t._v(" "),a("table",{staticClass:"reference"},[a("tbody",[a("tr",[a("td",{staticStyle:{width:"47px"}},[a("strong",[t._v("序号")])]),t._v(" "),a("td",{staticStyle:{width:"529px"}},[a("strong",[t._v("构造函数和说明")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{width:"47px"}},[t._v("\n\t\t\t\t1")]),t._v(" "),a("td",{staticStyle:{width:"529px"}},[a("strong",[t._v("GregorianCalendar() ")]),a("br"),t._v("\n\t\t\t\t在具有默认语言环境的默认时区内使用当前时间构造一个默认的 GregorianCalendar。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{width:"47px"}},[t._v("\n\t\t\t\t2")]),t._v(" "),a("td",{staticStyle:{width:"529px"}},[a("strong",[t._v("GregorianCalendar(int year, int month, int date) ")]),a("br"),t._v("\n\t\t\t\t在具有默认语言环境的默认时区内构造一个带有给定日期设置的 GregorianCalendar")])]),t._v(" "),a("tr",[a("td",{staticStyle:{width:"47px"}},[t._v("\n\t\t\t\t3")]),t._v(" "),a("td",{staticStyle:{width:"529px"}},[a("strong",[t._v("GregorianCalendar(int year, int month, int date, int hour, int minute) ")]),a("br"),t._v("\n\t\t\t\t为具有默认语言环境的默认时区构造一个具有给定日期和时间设置的 GregorianCalendar。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{width:"47px"}},[t._v("\n\t\t\t\t4")]),t._v(" "),a("td",{staticStyle:{width:"529px"}},[a("strong",[t._v("GregorianCalendar(int year, int month, int date, int hour, int minute, int second) ")]),a("br"),t._v("\n\t\t\t\t  为具有默认语言环境的默认时区构造一个具有给定日期和时间设置的 GregorianCalendar。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{width:"47px"}},[t._v("\n\t\t\t\t5")]),t._v(" "),a("td",{staticStyle:{width:"529px"}},[a("strong",[t._v("GregorianCalendar(Locale aLocale) ")]),a("br"),t._v("\n\t\t\t\t在具有给定语言环境的默认时区内构造一个基于当前时间的 GregorianCalendar。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{width:"47px"}},[t._v("\n\t\t\t\t6")]),t._v(" "),a("td",{staticStyle:{width:"529px"}},[a("strong",[t._v("GregorianCalendar(TimeZone zone) ")]),a("br"),t._v("\n\t\t\t\t在具有默认语言环境的给定时区内构造一个基于当前时间的 GregorianCalendar。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{width:"47px"}},[t._v("\n\t\t\t\t7")]),t._v(" "),a("td",{staticStyle:{width:"529px"}},[a("strong",[t._v("GregorianCalendar(TimeZone zone, Locale aLocale) ")]),a("br"),t._v("\n\t\t\t\t 在具有给定语言环境的给定时区内构造一个基于当前时间的 GregorianCalendar。")])])])]),t._v(" "),a("p",[t._v("这里是GregorianCalendar 类提供的一些有用的方法列表：\n"),a("table",{staticClass:"reference"},[a("tbody",[a("tr",[a("td",{staticStyle:{width:"47px"}},[a("strong",[t._v("序号")])]),t._v(" "),a("td",{staticStyle:{width:"529px"}},[a("strong",[t._v("方法和说明")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{width:"47px"}},[t._v("\n1")]),t._v(" "),a("td",{staticStyle:{width:"529px"}},[a("strong",[t._v("void add(int field, int amount) ")]),a("br"),t._v("\n根据日历规则，将指定的（有符号的）时间量添加到给定的日历字段中。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{width:"47px"}},[t._v("\n2")]),t._v(" "),a("td",{staticStyle:{width:"529px"}},[a("strong",[t._v("protected void computeFields() ")]),a("br"),t._v("\n转换UTC毫秒值为时间域值")])]),t._v(" "),a("tr",[a("td",{staticStyle:{width:"47px"}},[t._v("\n3")]),t._v(" "),a("td",{staticStyle:{width:"529px"}},[a("strong",[t._v("protected void computeTime() ")]),a("br"),t._v("\n覆盖Calendar ，转换时间域值为UTC毫秒值")])]),t._v(" "),a("tr",[a("td",{staticStyle:{width:"47px"}},[t._v("\n4")]),t._v(" "),a("td",{staticStyle:{width:"529px"}},[a("strong",[t._v("boolean equals(Object obj) ")]),a("br"),t._v("\n比较此 GregorianCalendar 与指定的 Object。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{width:"47px"}},[t._v("\n5")]),t._v(" "),a("td",{staticStyle:{width:"529px"}},[a("strong",[t._v("int get(int field) ")]),a("br"),t._v("\n获取指定字段的时间值")])]),t._v(" "),a("tr",[a("td",{staticStyle:{width:"47px"}},[t._v("\n6")]),t._v(" "),a("td",{staticStyle:{width:"529px"}},[a("strong",[t._v("int getActualMaximum(int field) ")]),a("br"),t._v("\n返回当前日期，给定字段的最大值")])]),t._v(" "),a("tr",[a("td",{staticStyle:{width:"47px"}},[t._v("\n7")]),t._v(" "),a("td",{staticStyle:{width:"529px"}},[a("strong",[t._v("int getActualMinimum(int field) ")]),a("br"),t._v("\n返回当前日期，给定字段的最小值")])]),t._v(" "),a("tr",[a("td",{staticStyle:{width:"47px"}},[t._v("\n8")]),t._v(" "),a("td",{staticStyle:{width:"529px"}},[a("strong",[t._v("int getGreatestMinimum(int field) ")]),a("br"),t._v("\n 返回此 GregorianCalendar 实例给定日历字段的最高的最小值。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{width:"47px"}},[t._v("\n9")]),t._v(" "),a("td",{staticStyle:{width:"529px"}},[a("strong",[t._v("Date getGregorianChange() ")]),a("br"),t._v("\n获得格里高利历的更改日期。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{width:"47px"}},[t._v("\n10")]),t._v(" "),a("td",{staticStyle:{width:"529px"}},[a("strong",[t._v("int getLeastMaximum(int field) ")]),a("br"),t._v("\n返回此 GregorianCalendar 实例给定日历字段的最低的最大值")])]),t._v(" "),a("tr",[a("td",{staticStyle:{width:"47px"}},[t._v("\n11")]),t._v(" "),a("td",{staticStyle:{width:"529px"}},[a("strong",[t._v("int getMaximum(int field) ")]),a("br"),t._v("\n返回此 GregorianCalendar 实例的给定日历字段的最大值。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{width:"47px"}},[t._v("\n12")]),t._v(" "),a("td",{staticStyle:{width:"529px"}},[a("strong",[t._v("Date getTime()")]),a("br"),t._v("\n获取日历当前时间。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{width:"47px"}},[t._v("\n13")]),t._v(" "),a("td",{staticStyle:{width:"529px"}},[a("strong",[t._v("long getTimeInMillis() ")]),a("br"),t._v("\n获取用长整型表示的日历的当前时间")])]),t._v(" "),a("tr",[a("td",{staticStyle:{width:"47px"}},[t._v("\n14")]),t._v(" "),a("td",{staticStyle:{width:"529px"}},[a("strong",[t._v("TimeZone getTimeZone() ")]),a("br"),t._v("\n获取时区。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{width:"47px"}},[t._v("\n15")]),t._v(" "),a("td",{staticStyle:{width:"529px"}},[a("strong",[t._v("int getMinimum(int field) ")]),a("br"),t._v("\n返回给定字段的最小值。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{width:"47px"}},[t._v("\n16")]),t._v(" "),a("td",{staticStyle:{width:"529px"}},[a("strong",[t._v("int hashCode() ")]),a("br"),t._v("\n重写hashCode.")])]),t._v(" "),a("tr",[a("td",{staticStyle:{width:"47px"}},[t._v("\n17")]),t._v(" "),a("td",{staticStyle:{width:"529px"}},[a("strong",[t._v("boolean isLeapYear(int year)")]),a("br"),t._v("\n确定给定的年份是否为闰年。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{width:"47px"}},[t._v("\n18")]),t._v(" "),a("td",{staticStyle:{width:"529px"}},[a("strong",[t._v("void roll(int field, boolean up) ")]),a("br"),t._v("\n在给定的时间字段上添加或减去（上/下）单个时间单元，不更改更大的字段。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{width:"47px"}},[t._v("\n19")]),t._v(" "),a("td",{staticStyle:{width:"529px"}},[a("strong",[t._v("void set(int field, int value) ")]),a("br"),t._v("\n用给定的值设置时间字段。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{width:"47px"}},[t._v("\n20")]),t._v(" "),a("td",{staticStyle:{width:"529px"}},[a("strong",[t._v("void set(int year, int month, int date) ")]),a("br"),t._v("\n设置年、月、日的值。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{width:"47px"}},[t._v("\n21")]),t._v(" "),a("td",{staticStyle:{width:"529px"}},[a("strong",[t._v("void set(int year, int month, int date, int hour, int minute) ")]),a("br"),t._v("\n设置年、月、日、小时、分钟的值。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{width:"47px"}},[t._v("\n22")]),t._v(" "),a("td",{staticStyle:{width:"529px"}},[a("strong",[t._v("void set(int year, int month, int date, int hour, int minute, int second) ")]),a("br"),t._v("\n设置年、月、日、小时、分钟、秒的值。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{width:"47px"}},[t._v("\n23")]),t._v(" "),a("td",{staticStyle:{width:"529px"}},[a("strong",[t._v("void setGregorianChange(Date date) ")]),a("br"),t._v("\n设置 GregorianCalendar 的更改日期。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{width:"47px"}},[t._v("\n24")]),t._v(" "),a("td",{staticStyle:{width:"529px"}},[a("strong",[t._v("void setTime(Date date) ")]),a("br"),t._v("\n用给定的日期设置Calendar的当前时间。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{width:"47px"}},[t._v("\n25")]),t._v(" "),a("td",{staticStyle:{width:"529px"}},[a("strong",[t._v("void setTimeInMillis(long millis) ")]),a("br"),t._v("\n用给定的long型毫秒数设置Calendar的当前时间。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{width:"47px"}},[t._v("\n26")]),t._v(" "),a("td",{staticStyle:{width:"529px"}},[a("strong",[t._v("void setTimeZone(TimeZone value) ")]),a("br"),t._v("\n用给定时区值设置当前时区。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{width:"47px"}},[t._v("\n27")]),t._v(" "),a("td",{staticStyle:{width:"529px"}},[a("strong",[t._v("String toString() ")]),a("br"),t._v("\n返回代表日历的字符串。")])])])])]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GregorianCalendarDemo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n \n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" months"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Jan"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Feb"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Mar"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Apr"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"May"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Jun"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Jul"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Aug"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Sep"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Oct"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Nov"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Dec"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      \n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" year"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 初始化 Gregorian 日历")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用当前时间和日期")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 默认为本地时间和时区")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GregorianCalendar")]),t._v(" gcalendar "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GregorianCalendar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 显示当前时间和日期的信息")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Date: "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("months"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("gcalendar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Calendar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MONTH"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" gcalendar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Calendar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DATE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("year "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gcalendar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Calendar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("YEAR"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Time: "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("gcalendar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Calendar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("HOUR"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('":"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("gcalendar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Calendar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MINUTE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('":"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("gcalendar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Calendar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SECOND"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      \n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 测试当前年份是否为闰年")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("gcalendar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isLeapYear")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("year"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n         "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"当前年份是闰年"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n         "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"当前年份不是闰年"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Date: Apr 22 2009")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Time: 11:25:27")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当前年份不是闰年")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br"),a("span",{staticClass:"line-number"},[t._v("34")]),a("br"),a("span",{staticClass:"line-number"},[t._v("35")]),a("br"),a("span",{staticClass:"line-number"},[t._v("36")]),a("br"),a("span",{staticClass:"line-number"},[t._v("37")]),a("br")])])])}),[],!1,null,null,null);s.default=e.exports}}]);