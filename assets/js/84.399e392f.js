(window.webpackJsonp=window.webpackJsonp||[]).push([[84],{562:function(t,r,e){"use strict";e.r(r);var n=e(4),a=Object(n.a)({},(function(){var t=this,r=t.$createElement,e=t._self._c||r;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"math类"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#math类"}},[t._v("#")]),t._v(" Math类")]),t._v(" "),e("p",[t._v("同Js中的内置Math类大同小异")]),t._v(" "),e("h2",{attrs:{id:"character类"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#character类"}},[t._v("#")]),t._v(" Character类")]),t._v(" "),e("p",[t._v("Js中没有的一个类，表示单一字符")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("char ch = 'a';\n \n// Unicode 字符表示形式\nchar uniChar = '\\u039A'; \n \n// 字符数组\nchar[] charArray ={ 'a', 'b', 'c', 'd', 'e' };\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("table",{staticClass:"reference"},[e("tbody",[e("tr",[e("th",[t._v("\n\t\t\t\t序号")]),t._v(" "),e("th",[t._v("\n\t\t\t\t方法与描述")])]),t._v(" "),e("tr",[e("td",[t._v("\n\t\t\t\t1")]),t._v(" "),e("td",[e("a",{attrs:{href:"character-isletter.html",target:"_blank"}},[t._v("isLetter()")]),e("br"),t._v("\n\t\t\t\t是否是一个字母")])]),t._v(" "),e("tr",[e("td",[t._v("\n\t\t\t\t2")]),t._v(" "),e("td",[e("a",{attrs:{href:"character-isdigit.html",target:"_blank"}},[t._v("isDigit()")]),e("br"),t._v("\n\t\t\t\t是否是一个数字字符")])]),t._v(" "),e("tr",[e("td",[t._v("\n\t\t\t\t3")]),t._v(" "),e("td",[e("a",{attrs:{href:"character-iswhitespace.html",target:"_blank"}},[t._v("isWhitespace()")]),e("br"),t._v("\n\t\t\t\t是否是一个空白字符")])]),t._v(" "),e("tr",[e("td",[t._v("\n\t\t\t\t4")]),t._v(" "),e("td",[e("a",{attrs:{href:"character-isuppercase.html",target:"_blank"}},[t._v("isUpperCase()")]),e("br"),t._v("\n\t\t\t\t是否是大写字母")])]),t._v(" "),e("tr",[e("td",[t._v("\n\t\t\t\t5")]),t._v(" "),e("td",[e("a",{attrs:{href:"character-islowercase.html",target:"_blank"}},[t._v("isLowerCase()")]),e("br"),t._v("\n\t\t\t\t是否是小写字母")])]),t._v(" "),e("tr",[e("td",[t._v("\n\t\t\t\t6")]),t._v(" "),e("td",[e("a",{attrs:{href:"character-touppercase.html",target:"_blank"}},[t._v("toUpperCase()")]),e("br"),t._v("\n\t\t\t\t指定字母的大写形式")])]),t._v(" "),e("tr",[e("td",[t._v("\n\t\t\t\t7")]),t._v(" "),e("td",[e("a",{attrs:{href:"character-tolowercase.html",target:"_blank"}},[t._v("toLowerCase")]),t._v("()"),e("br"),t._v("\n\t\t\t\t指定字母的小写形式")])]),t._v(" "),e("tr",[e("td",[t._v("\n\t\t\t\t8")]),t._v(" "),e("td",[e("a",{attrs:{href:"character-tostring.html",target:"_blank"}},[t._v("toString")]),t._v("()"),e("br"),t._v("\n\t\t\t\t返回字符的字符串形式，字符串的长度仅为1")])])])]),t._v(" "),e("h2",{attrs:{id:"string类"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#string类"}},[t._v("#")]),t._v(" String类")]),t._v(" "),e("p",[t._v("声明")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('String str = "Runoob";\nString str2=new string("Runoob");\n\n')])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[t._v("创建格式化字符串")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('String fs;\nfs = String.format("浮点型变量的值为 " +\n                   "%f, 整型变量的值为 " +\n                   " %d, 字符串变量的值为 " +\n                   " %s", floatVar, intVar, stringVar);\n')])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("table",{staticClass:"reference"},[e("tbody",[e("tr",[e("th",{staticStyle:{width:"76px"}},[t._v("\n\t\t\t\tSN(序号)")]),t._v(" "),e("th",{staticStyle:{width:"501px"}},[t._v("\n\t\t\t\t方法描述")])]),t._v(" "),e("tr",[e("td",{staticStyle:{width:"76px"}},[t._v("\n\t\t\t\t1")]),t._v(" "),e("td",{staticStyle:{width:"501px"}},[e("a",{attrs:{href:"java-string-charat.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("char charAt(int index)")]),e("br"),t._v("\n\t\t\t\t返回指定索引处的 char 值。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{width:"76px"}},[t._v("\n\t\t\t\t2")]),t._v(" "),e("td",{staticStyle:{width:"501px"}},[e("a",{attrs:{href:"java-string-compareto.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("int compareTo(Object o)")]),e("br"),t._v("\n\t\t\t\t把这个字符串和另一个对象比较。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{width:"76px"}},[t._v("\n\t\t\t\t3")]),t._v(" "),e("td",{staticStyle:{width:"501px"}},[e("a",{attrs:{href:"java-string-compareto.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("int compareTo(String anotherString)")]),e("br"),t._v("\n\t\t\t\t按字典顺序比较两个字符串。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{width:"76px"}},[t._v("\n\t\t\t\t4")]),t._v(" "),e("td",{staticStyle:{width:"501px"}},[e("a",{attrs:{href:"java-string-comparetoignorecase.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("int compareToIgnoreCase(String str)")]),e("br"),t._v("\n\t\t\t\t按字典顺序比较两个字符串，不考虑大小写。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{width:"76px"}},[t._v("\n\t\t\t\t5")]),t._v(" "),e("td",{staticStyle:{width:"501px"}},[e("a",{attrs:{href:"java-string-concat.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("String concat(String str)")]),e("br"),t._v("\n\t\t\t\t将指定字符串连接到此字符串的结尾。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{width:"76px"}},[t._v("\n\t\t\t\t6")]),t._v(" "),e("td",{staticStyle:{width:"501px"}},[e("a",{attrs:{href:"java-string-contentequals.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("boolean contentEquals(StringBuffer sb)")]),e("br"),t._v("\n\t\t\t\t当且仅当字符串与指定的StringBuffer有相同顺序的字符时候返回真。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{width:"76px"}},[t._v("\n\t\t\t\t7")]),t._v(" "),e("td",{staticStyle:{width:"501px"}},[e("a",{attrs:{href:"java-string-copyvalueof.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("static String copyValueOf(char[] data)")]),e("br"),t._v("\n\t\t\t\t返回指定数组中表示该字符序列的 String。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{width:"76px"}},[t._v("\n\t\t\t\t8")]),t._v(" "),e("td",{staticStyle:{width:"501px"}},[e("a",{attrs:{href:"java-string-copyvalueof.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("static String copyValueOf(char[] data, int offset, int count)")]),e("br"),t._v("\n\t\t\t\t返回指定数组中表示该字符序列的 String。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{width:"76px"}},[t._v("\n\t\t\t\t9")]),t._v(" "),e("td",{staticStyle:{width:"501px"}},[e("a",{attrs:{href:"java-string-endswith.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("boolean endsWith(String suffix)")]),e("br"),t._v("\n\t\t\t\t测试此字符串是否以指定的后缀结束。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{width:"76px"}},[t._v("\n\t\t\t\t10")]),t._v(" "),e("td",{staticStyle:{width:"501px"}},[e("a",{attrs:{href:"java-string-equals.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("boolean equals(Object anObject)")]),e("br"),t._v("\n\t\t\t\t将此字符串与指定的对象比较。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{width:"76px"}},[t._v("\n\t\t\t\t11")]),t._v(" "),e("td",{staticStyle:{width:"501px"}},[e("a",{attrs:{href:"java-string-equalsignorecase.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("boolean equalsIgnoreCase(String anotherString)")]),e("br"),t._v("\n\t\t\t\t将此 String 与另一个 String 比较，不考虑大小写。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{width:"76px"}},[t._v("\n\t\t\t\t12")]),t._v(" "),e("td",{staticStyle:{width:"501px"}},[e("a",{attrs:{href:"java-string-getbytes.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("byte[] getBytes()")]),e("br"),t._v("\n\t\t\t\t 使用平台的默认字符集将此 String 编码为 byte 序列，并将结果存储到一个新的 byte 数组中。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{width:"76px"}},[t._v("\n\t\t\t\t13")]),t._v(" "),e("td",{staticStyle:{width:"501px"}},[e("a",{attrs:{href:"java-string-getbytes.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("byte[] getBytes(String charsetName)")]),e("br"),t._v("\n\t\t\t\t使用指定的字符集将此 String 编码为 byte 序列，并将结果存储到一个新的 byte 数组中。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{width:"76px"}},[t._v("\n\t\t\t\t14")]),t._v(" "),e("td",{staticStyle:{width:"501px"}},[e("a",{attrs:{href:"java-string-getchars.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("void getChars(int srcBegin, int srcEnd, char[] dst, int dstBegin)")]),e("br"),t._v("\n\t\t\t\t将字符从此字符串复制到目标字符数组。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{width:"76px"}},[t._v("\n\t\t\t\t15")]),t._v(" "),e("td",{staticStyle:{width:"501px"}},[e("a",{attrs:{href:"java-string-hashcode.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("int hashCode()")]),e("br"),t._v("\n\t\t\t\t返回此字符串的哈希码。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{width:"76px"}},[t._v("\n\t\t\t\t16")]),t._v(" "),e("td",{staticStyle:{width:"501px"}},[e("a",{attrs:{href:"java-string-indexof.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("int indexOf(int ch)")]),e("br"),t._v("\n\t\t\t\t返回指定字符在此字符串中第一次出现处的索引。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{width:"76px"}},[t._v("\n\t\t\t\t17")]),t._v(" "),e("td",{staticStyle:{width:"501px"}},[e("a",{attrs:{href:"java-string-indexof.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("int indexOf(int ch, int fromIndex)")]),e("br"),t._v("\n\t\t\t\t返回在此字符串中第一次出现指定字符处的索引，从指定的索引开始搜索。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{width:"76px"}},[t._v("\n\t\t\t\t18")]),t._v(" "),e("td",{staticStyle:{width:"501px"}},[e("a",{attrs:{href:"java-string-indexof.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("int indexOf(String str)")]),e("br"),t._v("\n\t\t\t\t 返回指定子字符串在此字符串中第一次出现处的索引。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{width:"76px"}},[t._v("\n\t\t\t\t19")]),t._v(" "),e("td",{staticStyle:{width:"501px"}},[e("a",{attrs:{href:"java-string-indexof.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("int indexOf(String str, int fromIndex)")]),e("br"),t._v("\n\t\t\t\t返回指定子字符串在此字符串中第一次出现处的索引，从指定的索引开始。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{width:"76px"}},[t._v("\n\t\t\t\t20")]),t._v(" "),e("td",{staticStyle:{width:"501px"}},[e("a",{attrs:{href:"java-string-intern.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("String intern()")]),e("br"),t._v("\n\t\t\t\t 返回字符串对象的规范化表示形式。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{width:"76px"}},[t._v("\n\t\t\t\t21")]),t._v(" "),e("td",{staticStyle:{width:"501px"}},[e("a",{attrs:{href:"java-string-lastindexof.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("int lastIndexOf(int ch)")]),e("br"),t._v("\n\t\t\t\t 返回指定字符在此字符串中最后一次出现处的索引。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{width:"76px"}},[t._v("\n\t\t\t\t22")]),t._v(" "),e("td",{staticStyle:{width:"501px"}},[e("a",{attrs:{href:"java-string-lastindexof.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("int lastIndexOf(int ch, int fromIndex)")]),e("br"),t._v("\n\t\t\t\t返回指定字符在此字符串中最后一次出现处的索引，从指定的索引处开始进行反向搜索。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{width:"76px"}},[t._v("\n\t\t\t\t23")]),t._v(" "),e("td",{staticStyle:{width:"501px"}},[e("a",{attrs:{href:"java-string-lastindexof.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("int lastIndexOf(String str)")]),e("br"),t._v("\n\t\t\t\t返回指定子字符串在此字符串中最右边出现处的索引。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{width:"76px"}},[t._v("\n\t\t\t\t24")]),t._v(" "),e("td",{staticStyle:{width:"501px"}},[e("a",{attrs:{href:"java-string-lastindexof.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("int lastIndexOf(String str, int fromIndex)")]),e("br"),t._v("\n\t\t\t\t 返回指定子字符串在此字符串中最后一次出现处的索引，从指定的索引开始反向搜索。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{width:"76px"}},[t._v("\n\t\t\t\t25")]),t._v(" "),e("td",{staticStyle:{width:"501px"}},[e("a",{attrs:{href:"java-string-length.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("int length()")]),e("br"),t._v("\n\t\t\t\t返回此字符串的长度。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{width:"76px"}},[t._v("\n\t\t\t\t26")]),t._v(" "),e("td",{staticStyle:{width:"501px"}},[e("a",{attrs:{href:"java-string-matches.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("boolean matches(String regex)")]),e("br"),t._v("\n\t\t\t\t告知此字符串是否匹配给定的正则表达式。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{width:"76px"}},[t._v("\n\t\t\t\t27")]),t._v(" "),e("td",{staticStyle:{width:"501px"}},[e("a",{attrs:{href:"java-string-regionmatches.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("boolean regionMatches(boolean ignoreCase, int toffset, String other, int ooffset, int len)")]),e("br"),t._v("\n\t\t\t\t测试两个字符串区域是否相等。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{width:"76px"}},[t._v("\n\t\t\t\t28")]),t._v(" "),e("td",{staticStyle:{width:"501px"}},[e("a",{attrs:{href:"java-string-regionmatches.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("boolean regionMatches(int toffset, String other, int ooffset, int len)")]),e("br"),t._v("\n\t\t\t\t测试两个字符串区域是否相等。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{width:"76px"}},[t._v("\n\t\t\t\t29")]),t._v(" "),e("td",{staticStyle:{width:"501px"}},[e("a",{attrs:{href:"java-string-replace.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("String replace(char oldChar, char newChar)")]),e("br"),t._v("\n\t\t\t\t返回一个新的字符串，它是通过用 newChar 替换此字符串中出现的所有 oldChar 得到的。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{width:"76px"}},[t._v("\n\t\t\t\t30")]),t._v(" "),e("td",{staticStyle:{width:"501px"}},[e("a",{attrs:{href:"java-string-replaceall.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("String replaceAll(String regex, String replacement)")]),e("br"),t._v("\n\t\t\t\t使用给定的 replacement 替换此字符串所有匹配给定的正则表达式的子字符串。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{width:"76px"}},[t._v("\n\t\t\t\t31")]),t._v(" "),e("td",{staticStyle:{width:"501px"}},[e("a",{attrs:{href:"java-string-replacefirst.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("String replaceFirst(String regex, String replacement)")]),e("br"),t._v("\n\t\t\t\t 使用给定的 replacement 替换此字符串匹配给定的正则表达式的第一个子字符串。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{width:"76px"}},[t._v("\n\t\t\t\t32")]),t._v(" "),e("td",{staticStyle:{width:"501px"}},[e("a",{attrs:{href:"java-string-split.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("String[] split(String regex)")]),e("br"),t._v("\n\t\t\t\t根据给定正则表达式的匹配拆分此字符串。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{width:"76px"}},[t._v("\n\t\t\t\t33")]),t._v(" "),e("td",{staticStyle:{width:"501px"}},[e("a",{attrs:{href:"java-string-split.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("String[] split(String regex, int limit)")]),e("br"),t._v("\n\t\t\t\t根据匹配给定的正则表达式来拆分此字符串。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{width:"76px"}},[t._v("\n\t\t\t\t34")]),t._v(" "),e("td",{staticStyle:{width:"501px"}},[e("a",{attrs:{href:"java-string-startswith.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("boolean startsWith(String prefix)")]),e("br"),t._v("\n\t\t\t\t测试此字符串是否以指定的前缀开始。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{width:"76px"}},[t._v("\n\t\t\t\t35")]),t._v(" "),e("td",{staticStyle:{width:"501px"}},[e("a",{attrs:{href:"java-string-startswith.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("boolean startsWith(String prefix, int toffset)")]),e("br"),t._v("\n\t\t\t\t测试此字符串从指定索引开始的子字符串是否以指定前缀开始。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{width:"76px"}},[t._v("\n\t\t\t\t36")]),t._v(" "),e("td",{staticStyle:{width:"501px"}},[e("a",{attrs:{href:"java-string-subsequence.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("CharSequence subSequence(int beginIndex, int endIndex)")]),e("br"),t._v("\n\t\t\t\t 返回一个新的字符序列，它是此序列的一个子序列。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{width:"76px"}},[t._v("\n\t\t\t\t37")]),t._v(" "),e("td",{staticStyle:{width:"501px"}},[e("a",{attrs:{href:"java-string-substring.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("String substring(int beginIndex)")]),e("br"),t._v("\n\t\t\t\t返回一个新的字符串，它是此字符串的一个子字符串。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{width:"76px"}},[t._v("\n\t\t\t\t38")]),t._v(" "),e("td",{staticStyle:{width:"501px"}},[e("a",{attrs:{href:"java-string-substring.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("String substring(int beginIndex, int endIndex)")]),e("br"),t._v("\n\t\t\t\t返回一个新字符串，它是此字符串的一个子字符串。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{width:"76px"}},[t._v("\n\t\t\t\t39")]),t._v(" "),e("td",{staticStyle:{width:"501px"}},[e("a",{attrs:{href:"java-string-tochararray.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("char[] toCharArray()")]),e("br"),t._v("\n\t\t\t\t将此字符串转换为一个新的字符数组。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{width:"76px"}},[t._v("\n\t\t\t\t40")]),t._v(" "),e("td",{staticStyle:{width:"501px"}},[e("a",{attrs:{href:"java-string-tolowercase.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("String toLowerCase()")]),e("br"),t._v("\n\t\t\t\t使用默认语言环境的规则将此 String 中的所有字符都转换为小写。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{width:"76px"}},[t._v("\n\t\t\t\t41")]),t._v(" "),e("td",{staticStyle:{width:"501px"}},[e("a",{attrs:{href:"java-string-tolowercase.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("String toLowerCase(Locale locale)")]),e("br"),t._v("\n\t\t\t\t 使用给定 Locale 的规则将此 String 中的所有字符都转换为小写。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{width:"76px"}},[t._v("\n\t\t\t\t42")]),t._v(" "),e("td",{staticStyle:{width:"501px"}},[e("a",{attrs:{href:"java-string-tostring.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("String toString()")]),e("br"),t._v("\n\t\t\t\t 返回此对象本身（它已经是一个字符串！）。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{width:"76px"}},[t._v("\n\t\t\t\t43")]),t._v(" "),e("td",{staticStyle:{width:"501px"}},[e("a",{attrs:{href:"java-string-touppercase.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("String toUpperCase()")]),e("br"),t._v("\n\t\t\t\t使用默认语言环境的规则将此 String 中的所有字符都转换为大写。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{width:"76px"}},[t._v("\n\t\t\t\t44")]),t._v(" "),e("td",{staticStyle:{width:"501px"}},[e("a",{attrs:{href:"java-string-touppercase.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("String toUpperCase(Locale locale)")]),e("br"),t._v("\n\t\t\t\t使用给定 Locale 的规则将此 String 中的所有字符都转换为大写。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{width:"76px"}},[t._v("\n\t\t\t\t45")]),t._v(" "),e("td",{staticStyle:{width:"501px"}},[e("a",{attrs:{href:"java-string-trim.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("String trim()")]),e("br"),t._v("\n\t\t\t\t返回字符串的副本，忽略前导空白和尾部空白。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{width:"76px"}},[t._v("\n\t\t\t\t46")]),t._v(" "),e("td",{staticStyle:{width:"501px"}},[e("a",{attrs:{href:"java-string-valueof.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("static String valueOf(primitive data type x)")]),e("br"),t._v("\n\t\t\t\t返回给定data type类型x参数的字符串表示形式。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{width:"76px"}},[t._v("\n\t\t\t\t47")]),t._v(" "),e("td",{staticStyle:{width:"501px"}},[e("a",{attrs:{href:"java-string-contains.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("contains(CharSequence chars)")]),e("br"),t._v("\n\t\t\t\t判断是否包含指定的字符系列。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{width:"76px"}},[t._v("\n\t\t\t\t48")]),t._v(" "),e("td",{staticStyle:{width:"501px"}},[e("a",{attrs:{href:"java-string-isempty.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("isEmpty()")]),e("br"),t._v("\n\t\t\t\t判断字符串是否为空。")])])])]),t._v(" "),e("h2",{attrs:{id:"stringbuffer-和-stringbuilder-类"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#stringbuffer-和-stringbuilder-类"}},[t._v("#")]),t._v(" StringBuffer 和 StringBuilder 类")]),t._v(" "),e("p",[t._v("当对字符串进行修改的时候，需要使用 StringBuffer 和 StringBuilder 类。")]),t._v(" "),e("p",[t._v("和 String 类不同的是，StringBuffer 和 StringBuilder 类的对象能够被多次的修改，并且不产生新的未使用对象。\n"),e("img",{attrs:{src:"https://www.runoob.com/wp-content/uploads/2013/12/java-string-20201208.png",alt:""}})]),t._v(" "),e("p",[t._v("在使用 StringBuffer 类时，每次都会对 StringBuffer 对象本身进行操作，而不是生成新的对象，所以如果需要对字符串进行修改推荐使用 StringBuffer。")]),t._v(" "),e("p",[t._v("StringBuilder 类在 Java 5 中被提出，它和 StringBuffer 之间的最大不同在于 StringBuilder 的方法不是线程安全的（不能同步访问）。")]),t._v(" "),e("p",[t._v("由于 StringBuilder 相较于 StringBuffer 有速度优势，所以多数情况下建议使用 StringBuilder 类。")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://www.runoob.com/wp-content/uploads/2013/12/2021-03-01-java-stringbuffer.svg",alt:""}})]),t._v(" "),e("p",[t._v("以下是 StringBuffer 类支持的主要方法：\n"),e("table",{staticClass:"reference"},[e("tbody",[e("tr",[e("th",[t._v("\n序号")]),t._v(" "),e("th",[t._v("\n方法描述")])]),t._v(" "),e("tr",[e("td",[t._v("\n1")]),t._v(" "),e("td",[t._v("\npublic StringBuffer append(String s)"),e("br"),t._v("\n将指定的字符串追加到此字符序列。")])]),t._v(" "),e("tr",[e("td",[t._v("\n2")]),t._v(" "),e("td",[t._v("\npublic StringBuffer reverse()"),e("br"),t._v("\n 将此字符序列用其反转形式取代。")])]),t._v(" "),e("tr",[e("td",[t._v("\n3")]),t._v(" "),e("td",[t._v("\npublic delete(int start, int end)"),e("br"),t._v("\n移除此序列的子字符串中的字符。")])]),t._v(" "),e("tr",[e("td",[t._v("\n4")]),t._v(" "),e("td",[t._v("\npublic insert(int offset, int i)"),e("br"),t._v("\n将 "),e("code",[t._v("int")]),t._v(" 参数的字符串表示形式插入此序列中。")])]),t._v(" "),e("tr",[e("td",[t._v("\n5")]),t._v(" "),e("td",[t._v("\nreplace(int start, int end, String str)"),e("br"),t._v("\n使用给定 "),e("code",[t._v("String")]),t._v(" 中的字符替换此序列的子字符串中的字符。")])])])])]),t._v(" "),e("p",[t._v("下面的列表里的方法和 String 类的方法类似：\n"),e("table",{staticClass:"reference"},[e("tbody",[e("tr",[e("th",{staticStyle:{width:"64px"}},[t._v("\n序号")]),t._v(" "),e("th",{staticStyle:{width:"517px"}},[t._v("\n方法描述")])]),t._v(" "),e("tr",[e("td",{staticStyle:{width:"64px"}},[t._v("\n1")]),t._v(" "),e("td",{staticStyle:{width:"517px"}},[t._v("\nint capacity()"),e("br"),t._v("\n返回当前容量。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{width:"64px"}},[t._v("\n2")]),t._v(" "),e("td",{staticStyle:{width:"517px"}},[t._v("\nchar charAt(int index)"),e("br"),t._v("\n返回此序列中指定索引处的 "),e("code",[t._v("char")]),t._v(" 值。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{width:"64px"}},[t._v("\n3")]),t._v(" "),e("td",{staticStyle:{width:"517px"}},[t._v("\nvoid ensureCapacity(int minimumCapacity)"),e("br"),t._v("\n确保容量至少等于指定的最小值。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{width:"64px"}},[t._v("\n4")]),t._v(" "),e("td",{staticStyle:{width:"517px"}},[t._v("\nvoid getChars(int srcBegin, int srcEnd, char[] dst, int dstBegin)"),e("br"),t._v("\n将字符从此序列复制到目标字符数组 "),e("code",[t._v("dst")]),t._v("。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{width:"64px"}},[t._v("\n5")]),t._v(" "),e("td",{staticStyle:{width:"517px"}},[t._v("\nint indexOf(String str)"),e("br"),t._v("\n返回第一次出现的指定子字符串在该字符串中的索引。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{width:"64px"}},[t._v("\n6")]),t._v(" "),e("td",{staticStyle:{width:"517px"}},[t._v("\nint indexOf(String str, int fromIndex)"),e("br"),t._v("\n从指定的索引处开始，返回第一次出现的指定子字符串在该字符串中的索引。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{width:"64px"}},[t._v("\n7")]),t._v(" "),e("td",{staticStyle:{width:"517px"}},[t._v("\nint lastIndexOf(String str)"),e("br"),t._v("\n返回最右边出现的指定子字符串在此字符串中的索引。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{width:"64px"}},[t._v("\n8")]),t._v(" "),e("td",{staticStyle:{width:"517px"}},[t._v("\nint lastIndexOf(String str, int fromIndex)"),e("br"),t._v("\n返回 String 对象中子字符串最后出现的位置。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{width:"64px"}},[t._v("\n9")]),t._v(" "),e("td",{staticStyle:{width:"517px"}},[t._v("\nint length()"),e("br"),t._v("\n 返回长度（字符数）。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{width:"64px"}},[t._v("\n10")]),t._v(" "),e("td",{staticStyle:{width:"517px"}},[t._v("\nvoid setCharAt(int index, char ch)"),e("br"),t._v("\n将给定索引处的字符设置为 "),e("code",[t._v("ch")]),t._v("。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{width:"64px"}},[t._v("\n11")]),t._v(" "),e("td",{staticStyle:{width:"517px"}},[t._v("\nvoid setLength(int newLength)"),e("br"),t._v("\n设置字符序列的长度。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{width:"64px"}},[t._v("\n12")]),t._v(" "),e("td",{staticStyle:{width:"517px"}},[t._v("\nCharSequence subSequence(int start, int end)"),e("br"),t._v("\n返回一个新的字符序列，该字符序列是此序列的子序列。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{width:"64px"}},[t._v("\n13")]),t._v(" "),e("td",{staticStyle:{width:"517px"}},[t._v("\nString substring(int start)"),e("br"),t._v("\n返回一个新的 "),e("code",[t._v("String")]),t._v("，它包含此字符序列当前所包含的字符子序列。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{width:"64px"}},[t._v("\n14")]),t._v(" "),e("td",{staticStyle:{width:"517px"}},[t._v("\nString substring(int start, int end)"),e("br"),t._v("\n返回一个新的 "),e("code",[t._v("String")]),t._v("，它包含此序列当前所包含的字符子序列。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{width:"64px"}},[t._v("\n15")]),t._v(" "),e("td",{staticStyle:{width:"517px"}},[t._v("\nString toString()"),e("br"),t._v("\n返回此序列中数据的字符串表示形式。")])])])])])])}),[],!1,null,null,null);r.default=a.exports}}]);